//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Fail2Rdp.Fail2RdpService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://Fail2Rdp.Service", ConfigurationName="Fail2RdpService.IFail2RdpWCFService")]
    public interface IFail2RdpWCFService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Fail2Rdp.Service/IFail2RdpWCFService/AddBan", ReplyAction="http://Fail2Rdp.Service/IFail2RdpWCFService/AddBanResponse")]
        void AddBan(string ip);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Fail2Rdp.Service/IFail2RdpWCFService/AddBan", ReplyAction="http://Fail2Rdp.Service/IFail2RdpWCFService/AddBanResponse")]
        System.Threading.Tasks.Task AddBanAsync(string ip);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Fail2Rdp.Service/IFail2RdpWCFService/RemoveBan", ReplyAction="http://Fail2Rdp.Service/IFail2RdpWCFService/RemoveBanResponse")]
        bool RemoveBan(string ip);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Fail2Rdp.Service/IFail2RdpWCFService/RemoveBan", ReplyAction="http://Fail2Rdp.Service/IFail2RdpWCFService/RemoveBanResponse")]
        System.Threading.Tasks.Task<bool> RemoveBanAsync(string ip);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Fail2Rdp.Service/IFail2RdpWCFService/GetBans", ReplyAction="http://Fail2Rdp.Service/IFail2RdpWCFService/GetBansResponse")]
        string[] GetBans();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Fail2Rdp.Service/IFail2RdpWCFService/GetBans", ReplyAction="http://Fail2Rdp.Service/IFail2RdpWCFService/GetBansResponse")]
        System.Threading.Tasks.Task<string[]> GetBansAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Fail2Rdp.Service/IFail2RdpWCFService/GetThreshold", ReplyAction="http://Fail2Rdp.Service/IFail2RdpWCFService/GetThresholdResponse")]
        int GetThreshold();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Fail2Rdp.Service/IFail2RdpWCFService/GetThreshold", ReplyAction="http://Fail2Rdp.Service/IFail2RdpWCFService/GetThresholdResponse")]
        System.Threading.Tasks.Task<int> GetThresholdAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Fail2Rdp.Service/IFail2RdpWCFService/SetThreshold", ReplyAction="http://Fail2Rdp.Service/IFail2RdpWCFService/SetThresholdResponse")]
        void SetThreshold(int threshold);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Fail2Rdp.Service/IFail2RdpWCFService/SetThreshold", ReplyAction="http://Fail2Rdp.Service/IFail2RdpWCFService/SetThresholdResponse")]
        System.Threading.Tasks.Task SetThresholdAsync(int threshold);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFail2RdpWCFServiceChannel : Fail2Rdp.Fail2RdpService.IFail2RdpWCFService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Fail2RdpWCFServiceClient : System.ServiceModel.ClientBase<Fail2Rdp.Fail2RdpService.IFail2RdpWCFService>, Fail2Rdp.Fail2RdpService.IFail2RdpWCFService {
        
        public Fail2RdpWCFServiceClient() {
        }
        
        public Fail2RdpWCFServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Fail2RdpWCFServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Fail2RdpWCFServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Fail2RdpWCFServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void AddBan(string ip) {
            base.Channel.AddBan(ip);
        }
        
        public System.Threading.Tasks.Task AddBanAsync(string ip) {
            return base.Channel.AddBanAsync(ip);
        }
        
        public bool RemoveBan(string ip) {
            return base.Channel.RemoveBan(ip);
        }
        
        public System.Threading.Tasks.Task<bool> RemoveBanAsync(string ip) {
            return base.Channel.RemoveBanAsync(ip);
        }
        
        public string[] GetBans() {
            return base.Channel.GetBans();
        }
        
        public System.Threading.Tasks.Task<string[]> GetBansAsync() {
            return base.Channel.GetBansAsync();
        }
        
        public int GetThreshold() {
            return base.Channel.GetThreshold();
        }
        
        public System.Threading.Tasks.Task<int> GetThresholdAsync() {
            return base.Channel.GetThresholdAsync();
        }
        
        public void SetThreshold(int threshold) {
            base.Channel.SetThreshold(threshold);
        }
        
        public System.Threading.Tasks.Task SetThresholdAsync(int threshold) {
            return base.Channel.SetThresholdAsync(threshold);
        }
    }
}
